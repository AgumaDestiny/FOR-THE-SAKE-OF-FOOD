// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
}

enum Category {
  food
  dessert
  drinks
}



model Recipes {
  id          Int         @id @default(autoincrement())
  title       String
  description String[]
  cooktime    String      @default("cooktime")
  image       String      @default("image")
  ingredients String[]
  category    Category    @default(food)
  condtion    String[]
  recommended String?
  Favorites   Favorites[]
}

model Foodhistory {
  id            Int       @id @default(autoincrement())
  foods         Foods[]
  cookingMethod String[]
  freshness     String
  mealType      String
  date          DateTime?
  userId        String
}

model Favorites {
  id     Int    @id @default(autoincrement())
  userId String

  recipesId Int
  recipe    Recipes @relation(fields: [recipesId], references: [id])
}

model Foodcategory {
  id   Int    @id @default(autoincrement())
  name String

  Foods Foods[]
}

model Foods {
  id   Int    @id @default(autoincrement())
  name String

  foodcategory  Foodcategory[]
  Foodhistory   Foodhistory?   @relation(fields: [foodhistoryId], references: [id])
  foodhistoryId Int?
}

model Mealplanner {
  id        Int      @id @default(autoincrement())
  type      String
  name      String
  createdAt DateTime @default(now())
}

model GroceryItem {
  id        Int      @id @default(autoincrement())
  name      String
  checked   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Modal {
  id     Int    @id @default(autoincrement())
  age    Int
  height Int
  weight Int
  BMI    Float
  userId String
}
